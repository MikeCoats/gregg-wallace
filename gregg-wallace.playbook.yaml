- name: Set up the Gregg Wallace web app
  hosts: gregg-wallace-server
  tasks:
  
    - name: Create the installation dir
      ansible.builtin.file:
        path: /opt/gregg-wallace
        state: directory
        owner: gregg-wallace
        group: gregg-wallace
        mode: 'u=rwx,g=,o='
      become: true

    - name: Copy over the project files
      ansible.builtin.copy:
        src: '{{ item }}'
        dest: /opt/gregg-wallace
        mode: 'u=rwx,g=,o='
      loop:
        - ./requirements.txt
        - ./main.py
        - ./index.html

    - name: Create the static assets dir
      ansible.builtin.file:
        path: /opt/gregg-wallace/assets
        state: directory
        owner: gregg-wallace
        group: gregg-wallace
        mode: 'u=rwx,g=,o='
      become: true

    - name: Copy over the static assets
      ansible.builtin.copy:
        src: './assets/{{ item }}'
        dest: /opt/gregg-wallace/assets
        mode: 'u=rwx,g=,o='
      loop:
        - logo.svg

    - name: Install python
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - python-is-python3
        update_cache: true
        cache_valid_time: 86400 # One day
      become: true

    - name: Install the python packages
      ansible.builtin.pip:
        requirements: /opt/gregg-wallace/requirements.txt
        virtualenv: /opt/gregg-wallace/.venv
        virtualenv_command: python -m venv

    - name: Copy over the systemd service
      ansible.builtin.copy:
        src: ./gregg-wallace.service
        dest: /opt/gregg-wallace/gregg-wallace.service
        mode: 'u=rw,g=r,o=r'

    - name: Link in the systemd service
      ansible.builtin.file:
        src: /opt/gregg-wallace/gregg-wallace.service
        dest: /etc/systemd/system/gregg-wallace.service
        state: link
      become: true

    - name: Start the Gregg Wallace web app
      ansible.builtin.systemd:
        daemon_reload: true
        name: gregg-wallace.service
        enabled: true
        state: restarted
      become: true

- name: Set up the Caddy reverse proxy
  hosts: gregg-wallace-server
  tasks:
  
    - name: Create the sites directories
      ansible.builtin.file:
        path: '/etc/caddy/{{item}}'
        state: directory
        owner: root
        group: root
        mode: 'u=rwx,g=rx,o=rx'
      loop:
        - sites-available
        - sites-enabled
      become: true

    - name: Copy over the caddyfile
      ansible.builtin.copy:
        src: ./gregg-wallace.caddyfile
        dest: /etc/caddy/sites-available/
        owner: root
        group: root
        mode: 'u=rw,g=r,o=r'
      become: true

    - name: Link in the caddyfile to enable it
      ansible.builtin.file:
        state: link
        src: /etc/caddy/sites-available/gregg-wallace.caddyfile
        dest: /etc/caddy/sites-enabled/gregg-wallace.caddyfile
        owner: root
        group: root
        mode: 'u=rw,g=r,o=r'
      become: true

    - name: Reload and restart caddy
      ansible.builtin.systemd:
        daemon_reload: true
        name: caddy.service
        enabled: true
        state: restarted
      become: true
